% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_psi_data.R
\name{get_psi_data}
\alias{get_psi_data}
\title{Download Plant Water Potential Data}
\usage{
get_psi_data(
  source = c("repo", "zenodo"),
  format = c("duckdb", "csv"),
  dest_dir = NULL,
  overwrite = FALSE,
  repo_url = NULL,
  zenodo_doi = NULL,
  github_token = NULL
)
}
\arguments{
\item{source}{Character string specifying the data source, either "repo" (default) or "zenodo".}

\item{format}{Character string specifying the data format to download, either "duckdb" (default) or "csv".}

\item{dest_dir}{Character string specifying the destination directory for downloaded files.
If NULL (default), files will be downloaded to a default location determined by \code{get_data_dir()}.}

\item{overwrite}{Logical indicating whether to overwrite existing files. Default is FALSE.}

\item{repo_url}{Character string specifying the repository URL. Only used when source = "repo".
If NULL (default), a pre-configured URL will be used.}

\item{zenodo_doi}{Character string specifying the Zenodo DOI. Only used when source = "zenodo".
If NULL (default), a pre-configured DOI will be used.}

\item{github_token}{Character string containing a GitHub Personal Access Token (PAT) for accessing private repositories.
If NULL (default), the function will look for a token in the GITHUB_PAT or GITHUB_TOKEN environment variable.
Set this with \code{Sys.setenv(GITHUB_PAT = "your_token_here")} or in your .Renviron file.}
}
\value{
Invisibly returns the path to the downloaded data.
}
\description{
This function downloads plant water potential data from a specified source.
Users can choose between fetching data from a repository URL or from Zenodo.
Downloaded data can be saved as either a DuckDB file or CSV files.
For accessing data in a private GitHub repository, authentication is required.
}
\examples{
\dontrun{
# Download data from repository, as DuckDB
get_psi_data()

# Download data from Zenodo, as CSV files
get_psi_data(source = "zenodo", format = "csv")

# Specify a custom destination directory
get_psi_data(dest_dir = "~/my_data")

# Access data from a private GitHub repository using a token
get_psi_data(github_token = "your_github_token")

# Alternative: set token in environment and use it
Sys.setenv(GITHUB_PAT = "your_github_token")
get_psi_data()
}
}
